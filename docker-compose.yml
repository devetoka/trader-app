version: '3'

services:

  server:
    image: 'nginx:alpine'
    container_name: 'nginx-server'
    working_dir: /application
    volumes:
      - './app:/application'
      - './log/:/var/log/nginx'
      - './docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf'
    ports:
      - '8080:80'

  application:
    container_name: 'application'
    build:
      dockerfile: docker/php/Dockerfile
      context: .
    working_dir: /application
    volumes:
      - './app:/application'
      - './docker/php/php-ini-overrides.ini:/etc/php/8.2/fpm/conf.d/99-overrides.ini'
      - './php:/etc/php/8.2/cli'

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-15}-alpine
    container_name: postgres-db
    links:
      - application
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
#      - ./docker/db/data:/var/lib/postgresql/data:rw
##< doctrine/doctrine-bundle ###
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    links:
      - application
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-guest}
    ports:
      - "5672:5672"
      - "15672:15672"

volumes:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###

networks:
  default:
    driver: bridge
